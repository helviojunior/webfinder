# GitHub Action workflow to build and run WebFinder's tests
#

name: Test Build

on:
    push:
      branches: [ main ] #change to main
      paths-ignore:
        - .gitignore
        - README.md
        - LICENSE
        - TODO
        - webfinder/__meta__.py
        #- .github/workflows/build_and_test.yml

    pull_request:
      branches: [ main ]
      paths-ignore:
        - .gitignore
        - README.md
        - LICENSE
        - TODO
        - webfinder/__meta__.py
        - .github/workflows/build_and_test.yml

jobs:
  lint:
    name: Check syntaxs errors and warnings
    runs-on: ubuntu-latest
    if:
      github.event_name == 'push' || github.event.pull_request.head.repo.full_name !=
      github.repository

    steps:
      - name: Checkout webfinder
        uses: actions/checkout@v3

      - name: Setup Python 3.10
        uses: actions/setup-python@v3
        with:
          python-version: "3.10"

      - name: Install Python dependencies
        run: |
          python -m pip install --upgrade pip
          python -m pip install flake8

      - name: Check syntax errors
        run: |
          flake8 . --count --select=E9,F63,F7,F82 --show-source --statistics

      - name: Check PEP8 warnings
        run: |
          flake8 . --count --ignore=E1,E2,E3,E501,W291,W293 --exit-zero --max-complexity=65 --max-line-length=127 --statistics

  test:
    name: Run unit tests and build wheel
    needs: lint
    runs-on: ${{ matrix.os }}
    if:
      github.event_name == 'push' || github.event.pull_request.head.repo.full_name !=
      github.repository

    strategy:
      fail-fast: false
      matrix:
        python-version: ["3.9", "3.10", "3.11"]
        experimental: [false]
        os: [ubuntu-latest, macos-latest, windows-latest]
        include:
          - python-version: "3.12"
            experimental: true
            os: ubuntu-latest
    continue-on-error: ${{ matrix.experimental }}

    steps:
      - name: Checkout webfinder
        uses: actions/checkout@v3

      - name: Setup Python ${{ matrix.python-version }}
        uses: actions/setup-python@v3
        with:
          python-version: ${{ matrix.python-version }}

      - name: Install Python dependencies
        run: |
          python -m pip install --upgrade pip
          python -m pip install -r tests/requirements-test.txt

      - name: Install webfinder
        run: |
          pip install .

      - name: Run unit tests
        run: |
          pytest -s tests/tests.py

      - name: Build artifact
        run: |
          python setup.py sdist

  publish:
    name: Publish on Test Environment
    needs: test
    runs-on: ubuntu-latest
    if:
      github.event_name == 'push' || github.event.pull_request.head.repo.full_name !=
      github.repository

    strategy:
      fail-fast: false
      matrix:
        python-version: ["3.10"]
        experimental: [false]
    continue-on-error: ${{ matrix.experimental }}

    steps:
      - name: Checkout webfinder
        uses: actions/checkout@v3

      - name: Setup Python ${{ matrix.python-version }}
        uses: actions/setup-python@v3
        with:
          python-version: ${{ matrix.python-version }}

      - name: Install Python dependencies
        run: |
          python -m pip install --upgrade pip
          python -m pip install -r tests/requirements-test.txt

      - name: Change Package version
        run: |
          oldv=$( grep '__version__' webfinder/__meta__.py | grep -oE '[0-9\.]+')
          current=$(date '+%Y%m%d%H%M%S')
          meta=$(cat webfinder/__meta__.py | sed "s/__version__.*/__version__ = '"${oldv}"-"${current}"'/")
          echo "$meta" > webfinder/__meta__.py

      - name: Install webfinder
        run: |
          pip install .

      - name: Build artifact
        run: |
          python setup.py sdist

      - name: Publish package in Test Environment
        uses: pypa/gh-action-pypi-publish@release/v1
        with:
          password: ${{ secrets.test_pypi_password }}
          repository_url: https://test.pypi.org/legacy/
          skip_existing: true